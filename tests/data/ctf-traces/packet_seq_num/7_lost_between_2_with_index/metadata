/* CTF 1.8 */

/* This was generated by a Babeltrace `sink.ctf.fs` component. */

trace {
	major = 1;
	minor = 8;
	uuid = "1c810767-575e-4c4e-afa1-5d3e15081cb9";
	byte_order = le;
	packet.header := struct {
		integer { size = 32; align = 8; base = x; } magic;
		integer { size = 8; align = 8; } uuid[16];
		integer { size = 64; align = 8; } stream_id;
		integer { size = 64; align = 8; } stream_instance_id;
	} align(8);
};

clock {
	name = default;
	freq = 1000000000;
	precision = 0;
	offset_s = 0;
	offset = 0;
	absolute = true;
};

stream {
	id = 0;
	packet.context := struct {
		integer { size = 64; align = 8; } packet_size;
		integer { size = 64; align = 8; } content_size;
		integer { size = 64; align = 8; map = clock.default.value; } timestamp_begin;
		integer { size = 64; align = 8; map = clock.default.value; } timestamp_end;
		integer { size = 64; align = 8; } packet_seq_num;
	} align(8);

	event.header := struct {
		integer { size = 64; align = 8; } id;
		integer { size = 64; align = 8; map = clock.default.value; } timestamp;
	} align(8);
};

event {
	name = "my-event";
	stream_id = 0;
	id = 0;
};

